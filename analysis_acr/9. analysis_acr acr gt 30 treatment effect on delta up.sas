%let path1=d:\userdata\shared\ckd_endpts\root;

libname pclean3 "&path1\analysis_acr\datasets";
libname Exports "&path1\analysis_acr\acr_exports";

options validvarname=v7 nodate center nonumber replace xsync noxwait nofmterr ls=96 nomlogic nomrecall mprint symbolgen mautosource 
sasautos=("&path1\macros");


data zallrxstudies;
 set pclean3.zallrxdata;
run;
data baseall;
 set pclean3.fda2_allrx;
 if zacr > 30;
 if compress(UP_MeasureToUse)="PER" then do;
	 delupro6=delupro6/1.67;
	 delupro12=delupro12/1.67;
 end;
 if compress(UP_MeasureToUse)="AER" then do;
	 delupro6=delupro6;
	 delupro12=delupro12;
 end;
 if compress(UP_MeasureToUse)="PCR" then do;
	 delupro6=delupro6/1.67;
	 delupro12=delupro12/1.67;
 end;
 if compress(UP_MeasureToUse)="ACR" then do;
	 delupro6=delupro6;
	 delupro12=delupro12;
 end;
 if compress(UP_MeasureToUse)="SPCR" then do;
	 delupro6=delupro6/1.67;
	 delupro12=delupro12/1.67; 
 end;
 if compress(UP_MeasureToUse)="SACR" then do;
	 delupro6=delupro6;
	 delupro12=delupro12;
 end;
run;
data bstudies;
 set pclean3.allrxdata;
run;
data cstudies;
 set pclean3.b_gfr_up_6m_acr30 pclean3.b_gfr_up_12m_acr30;
      if datausedname="6-month sample"  then period="2.6m ";
 else if datausedname="12-month sample" then period="3.12m";
run;
proc sort data=bstudies;
 by allrx;
run;
proc sort data=cstudies;
 by allrx;
run;
data studies;
 merge bstudies cstudies;
 by allrx;
run;
data upro6;
 set baseall;
 keep datagrp1 datagrp2 study_num allrx new_id delupro6 logdelupro6 uprotime6 zupro t_assign zstudy1 zstudy2 zstudy3 ztrt1 ztrt2 combo;
run;
data upro12;
 set baseall;
 keep datagrp1 datagrp2 study_num allrx new_id delupro12 logdelupro12 uprotime12 zupro t_assign zstudy1 zstudy2 zstudy3 ztrt1 ztrt2 combo;
run;
proc sort data=upro6;
 by datagrp2 allrx new_id;
run;
proc sort data=upro12;
 by datagrp2 allrx new_id;
run;
data upro_change0;
 merge upro6(drop=zstudy1 zstudy2 zstudy3 ztrt1 ztrt2) upro12(drop=zstudy1 zstudy2 zstudy3 ztrt1 ztrt2);
 by datagrp2 allrx new_id;
run;
data upro_change;
 set upro_change0;
run;
data prot_models0;
 set upro6(in=in1) upro12(in=in2);

 if in1 then do;
  if zupro>0 then x=log(zupro);else if zupro=0 then x=log(0.01);
  y=logdelupro6;
        if zupro ne . and delupro6 ne . then missingtype=1;
   else if zupro ne . and delupro6=. then missingtype=2;
   else if zupro=. and delupro6 ne . then missingtype=3;
   else if zupro=. and delupro6=. then missingtype=4;
  period="2.6m ";
  basevalue=zupro;
  fupvalue=delupro6+zupro;
  clocktimediff=uprotime6;
 end;

 if in2 then do;
  if zupro>0 then x=log(zupro);else if zupro=0 then x=log(0.01);
  y=logdelupro12;
        if zupro ne . and delupro12 ne . then missingtype=1;
   else if zupro ne . and delupro12=. then missingtype=2;
   else if zupro=. and delupro12 ne . then missingtype=3;
   else if zupro=. and delupro12=. then missingtype=4;
  period="3.12m";
  basevalue=zupro;
  fupvalue=delupro12+zupro;
  clocktimediff=uprotime12;
 end;
 keep datagrp1 datagrp2 new_id allrx study_num x y period missingtype t_assign basevalue fupvalue clocktimediff zstudy1 zstudy2 zstudy3 
      ztrt1 ztrt2 combo;
run; 
proc sort data=prot_models0;
 by datagrp2 allrx period;
run;
ods listing close;
proc means data=prot_models0 n p25 median p75;
 var basevalue fupvalue;
 class datagrp1 datagrp2 allrx period t_assign;
 ods output summary=stats1;
 where (x ne . and y ne .);
run;
proc sort data=stats1;
 by datagrp2 allrx period;
run;
/** baseline values **/
proc transpose data=stats1 out=bst1(drop=_name_ _label_) let prefix=base_n;
var basevalue_n;
by datagrp2 allrx period;
id t_assign;
run;
proc transpose data=stats1 out=bst2(drop=_name_ _label_) let prefix=base_p25;
var basevalue_p25;
by datagrp2 allrx period;
id t_assign;
run;
proc transpose data=stats1 out=bst3(drop=_name_ _label_) let prefix=base_median;
var basevalue_median;
by datagrp2 allrx period;
id t_assign;
run;
proc transpose data=stats1 out=bst4(drop=_name_ _label_) let prefix=base_p75;
var basevalue_p75;
by datagrp2 allrx period;
id t_assign;
run;
/** follow-up values **/
proc transpose data=stats1 out=fst1(drop=_name_ _label_) let prefix=fup_n;
var fupvalue_n;
by datagrp2 allrx period;
id t_assign;
run;
proc transpose data=stats1 out=fst2(drop=_name_ _label_) let prefix=fup_p25;
var fupvalue_p25;
by datagrp2 allrx period;
id t_assign;
run;
proc transpose data=stats1 out=fst3(drop=_name_ _label_) let prefix=fup_median;
var fupvalue_median;
by datagrp2 allrx period;
id t_assign;
run;
proc transpose data=stats1 out=fst4(drop=_name_ _label_) let prefix=fup_p75;
var fupvalue_p75;
by datagrp2 allrx period;
id t_assign;
run;
proc freq data=prot_models0;
 table missingtype/missing;
 by datagrp2 allrx period;
 ods output onewayfreqs=onewayfreqs(drop=table f_missingtype);
run;
proc sort data=onewayfreqs;
 by datagrp2 allrx period;
run;
proc transpose data=onewayfreqs out=t1(drop=_name_) let prefix=fmissingtype;
var frequency;
by datagrp2 allrx period;
id missingtype;
run;
proc transpose data=onewayfreqs out=t2(drop=_name_) let prefix=pmissingtype;
var percent;
by datagrp2 allrx period;
id missingtype;
run;
data studies1;
 set studies;
      if datausedname="6-month sample"  then period="2.6m ";
 else if datausedname="12-month sample" then period="3.12m";
run;
proc sort data=studies1;
 by datagrp2 allrx period;
run;
proc sort data=onewayfreqs;
 by datagrp2 allrx period;
run;
data onewayfreqs1;
 merge studies1 t1 t2 bst1 bst2 bst3 bst4 fst1 fst2 fst3 fst4;
 by datagrp2 allrx period;
run;
data onewayfreqs2;
 length allrxname $19. allrx 8. period $6. 
 fmissingtype1 pmissingtype1 
 fmissingtype2 pmissingtype2 
 fmissingtype3 pmissingtype3
 fmissingtype4 pmissingtype4 8.;
 set onewayfreqs1;
 array all fmissingtype1 pmissingtype1 fmissingtype2 pmissingtype2 
           fmissingtype3 pmissingtype3 fmissingtype4 pmissingtype4;
 do over all;
 if all=. then all=0;
 end;
run;
proc sort data=onewayfreqs2;
 by datagrp2 allrx period;
run;
data prot_models1;
 set prot_models0(in=in1) prot_models0(in=in2);
 if x=. or y=. then delete;
 if in1 then do;
 model="1. Unadjusted";
 adj=0;
 resp=y;
 end;
 if in2 then do;
 adj=x;
 resp=y;
 model="2. ANCOVA";
 end;
run;
%regs(prot_models1,resp,datagrp2 period model allrx,t_assign adj zstudy1 zstudy2 zstudy3 ztrt1 ztrt2,sall);
data sall;
 set sall;
       if compress(variable)="Intercept" then var_order=1;
  else if compress(variable)="T_assign"  then var_order=2;
  else if compress(variable)="adj"       then var_order=3;
  else if compress(variable)="zstudy1"   then var_order=4;
  else if compress(variable)="zstudy2"   then var_order=5;
  else if compress(variable)="zstudy3"   then var_order=6;
  else if compress(variable)="ztrt1"     then var_order=7;
  else if compress(variable)="ztrt2"     then var_order=8;
run;
proc sort data=onewayfreqs2;
 by datagrp2 allrx period;
run;
proc sort data=sall;
 by datagrp2 allrx period;
run;
data sall1;
 merge sall onewayfreqs2;
 by datagrp2 allrx period;
run;
proc sort data=sall1;
 by datagrp2 allrx period model var_order;
run;
data sall2;
 length dataused 8. datausedname $15. datagrp2 8. datagrp1 $12. period $6. allrx 8. allrxname $19.  allrx_year $16. 
         region 8. region_fmt $13. pooled 8. pooled_fmt $19. intervention 8. intervention_fmt $29. intervention_abrev $7.
	    disease 8. disease_fmt $22. disease2 8. disease2_fmt $22. include_ia 8. calc_b_n_egfr	calc_b_mean_egfr calc_b_n_up calc_b_median_up 8. model $14.;
 set sall1;
 if model="1. Unadjusted" and compress(variable)="adj" then delete;
 array all base_p250 base_p251 base_median0 base_median1 base_p750 base_p751 fup_p250 fup_p251 fup_median0 fup_median1 
          fup_p750 fup_p751;
 do over all;
 all=all/1;
 end;
 if dataused=. then delete;
run;
proc sort data=sall2;
 by allrx;
run;
proc sort data=zallrxstudies;
 by allrx;
run;
data sall2;
 merge sall2(in=in1) zallrxstudies;
 by allrx;
 if in1;
run;
proc sort data=sall2;
 by datagrp2 zallrx period model var_order;
run;
data sall2;
 set sall2;
 drop var_order;
run;
%zexportcsv(sall2,txt_effects_up2_acr30,&path1\analysis_acr\acr_exports);
data Exports.txt_effects_up2_acr30;
 set sall2;
run;
/** This is for a linked Excel table, keep only the t_assign row **/
data zzsall2;
 length dataused 8. datausedname $15. datagrp2 8. datagrp1 $12. period $6. allrx 8. allrxname $19.  allrx_year $16. 
         region 8. region_fmt $13. pooled 8. pooled_fmt $19. intervention 8. intervention_fmt $29. intervention_abrev $7.
	    disease 8. disease_fmt $22. disease2 8. disease2_fmt $22. include_ia 8. calc_b_n_egfr	calc_b_mean_egfr calc_b_n_up calc_b_median_up 8. model $14.;
 set sall1;
 if model="1. Unadjusted" and compress(variable)="adj" then delete;
 array all base_p250 base_p251 base_median0 base_median1 base_p750 base_p751 fup_p250 fup_p251 fup_median0 fup_median1 
          fup_p750 fup_p751;
 do over all;
 all=all/1;
 end;
 if dataused=. then delete;
 if compress(variable)="T_assign";
run;
proc sort data=zzsall2;
 by allrx;
run;
proc sort data=zallrxstudies;
 by allrx;
run;
data zzsall2;
 merge zzsall2(in=in1) zallrxstudies;
 by allrx;
 if in1;
run;
proc sort data=zzsall2;
 by datagrp2 zallrx period model var_order;
run;
data zzsall2;
 set zzsall2;
 drop var_order;
run;
%zexportcsv(zzsall2,txt_effects_up2a_acr30,&path1\analysis_acr\acr_exports);
/** No intercept **/
data prot_models2;
 set prot_models1;
run;
proc sql noprint;
 create table prot_models3 as
 select *, mean(adj) as mean_adj
from prot_models2
group by datagrp2,period,model,allrx;
quit;
data prot_models4;
 set prot_models3;
 adj=adj-mean_adj;
 if t_assign=0 then do;t_assign0=1;t_assign1=0;end;
 if t_assign=1 then do;t_assign0=0;t_assign1=1;end;
run;
%regsi(prot_models4,resp,datagrp2 period model allrx,t_assign0 t_assign1 adj zstudy1 zstudy2 zstudy3 ztrt1 ztrt2,xsall);
data xsall;
 set xsall;
       if compress(variable)="t_assign0" then var_order=1;
  else if compress(variable)="t_assign1" then var_order=2;
  else if compress(variable)="adj"       then var_order=3;
  else if compress(variable)="zstudy1"   then var_order=4;
  else if compress(variable)="zstudy2"   then var_order=5;
  else if compress(variable)="zstudy3"   then var_order=6;
  else if compress(variable)="ztrt1"     then var_order=7;
  else if compress(variable)="ztrt2"     then var_order=8;
run;
proc sort data=xsall;
 by datagrp2 allrx period;
run;
proc sort data=studies1;
 by datagrp2 allrx period;
run;
data xsall1;
 merge studies1 xsall;
 by datagrp2 allrx period;
run;
proc sort data=xsall1;
 by datagrp2 allrx period model var_order;
run;
data xsall2;
 length dataused 8. datausedname $15. datagrp2 8. datagrp1 $12. period $6. allrx 8. allrxname $19.  allrx_year $16. 
        region 8. region_fmt $13. pooled 8. pooled_fmt $19. intervention 8. intervention_fmt $29. intervention_abrev $7.
	    disease 8. disease_fmt $22. disease2 8. disease2_fmt $22. include_ia 8. calc_b_n_egfr	calc_b_mean_egfr calc_b_n_up calc_b_median_up 8. model $14.;
 set xsall1;
 if model="1. Unadjusted" and compress(variable)="adj" then delete;
 if dataused=. then delete;
run;
proc sort data=xsall2;
 by allrx;
run;
proc sort data=zallrxstudies;
 by allrx;
run;
data xsall2;
 merge xsall2(in=in1) zallrxstudies;
 by allrx;
 if in1;
run;
proc sort data=xsall2;
 by datagrp2 zallrx period model var_order;
run;
data xsall2;
 set xsall2;
 drop var_order;
run;
%zexportcsv(xsall2,noint_txt_effects_up2_acr30,&path1\analysis_acr\acr_exports);
data Exports.noint_txt_effects_up2_acr30;
 set xsall2;
run;
